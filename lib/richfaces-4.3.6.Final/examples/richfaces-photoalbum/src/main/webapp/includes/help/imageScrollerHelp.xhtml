<!--
  JBoss, Home of Professional Open Source
  Copyright 2013, Red Hat, Inc. and individual contributors
  by the @authors tag. See the copyright.txt in the distribution for a
  full listing of individual contributors.

  This is free software; you can redistribute it and/or modify it
  under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation; either version 2.1 of
  the License, or (at your option) any later version.

  This software is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this software; if not, write to the Free
  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core" xmlns:a4j="http://richfaces.org/a4j"
    xmlns:rich="http://richfaces.org/rich">

    <div class="section" lang="en-US">
        <div class="titlepage">
            <div>
                <div>
                    <h3 class="title">Images Scroller</h3>
                </div>
            </div>
        </div>
        <p>
            The Images Scroller implementation in the Photo Album application is basically <span class="bold"><strong><span
                    class="property">&lt;a4j:repeat&gt;</span></strong></span> with the value attribute bound to
            <code class="code"> {model.selectedAlbum.images}</code>
            , which is a collection of images of the selected album and the <span class="bold"><strong><span
                    class="property">&lt;rich:dataScroller&gt;</span></strong></span> component tied to the <span class="bold"><strong><span
                    class="property">&lt;a4j:repeat&gt;</span></strong></span>.
        </p>
        <p>
            The source code you can find in the includes/images/imageScroller.xhtml file. Now let's go deeper into the details.
            The main component here is <strong><span class="property">&lt;a4j:repeat&gt;</span></strong>:
        </p>
        <pre class="brush: xml, gutter: false, highlight: [2,3]">
            &lt;a4j:repeat value=&quot;#{'#{'}model.selectedAlbum.images}&quot; rows=&quot;5&quot; var=&quot;img&quot; id=&quot;repeat&quot; rowKeyVar=&quot;rk&quot;&gt;
              &lt;a4j:outputPanel layout=&quot;block&quot;
                  styleClass=&quot;preview_box_photo_nav #{'#{'}model.selectedImage == img ? 'preview_box_photo_current' : 'preview_box_photo_default'}&quot;&gt;
                &lt;h:panelGroup layout=&quot;block&quot; styleClass=&quot;preview_box_photo_80&quot;&gt;
                  &lt;h:graphicImage styleClass=&quot;pr_photo_bg&quot; value=&quot;/resources/img/shell/frame_photo_80.png&quot; /&gt;
                  &lt;h:panelGrid cellpadding=&quot;0&quot; cellspacing=&quot;2&quot;&gt;
                    &lt;h:panelGroup layout=&quot;block&quot;&gt;
                      &lt;a4j:mediaOutput element=&quot;img&quot; createContent=&quot;#{'#{'}imageLoader.paintImage}&quot;
                         value=&quot;#{'#{'}fileManager.transformPath(img.fullPath, '_small80')}&quot; mimeType=&quot;image/jpeg&quot; /&gt;
                      &lt;br /&gt;
                    &lt;/h:panelGroup&gt;
                  &lt;/h:panelGrid&gt;
                  &lt;h:panelGroup layout=&quot;block&quot; styleClass=&quot;photo_name&quot;&gt;
                    &lt;h:outputText value=&quot;#{'#{'}img.name}&quot; /&gt;
                  &lt;/h:panelGroup&gt;
                  &lt;h:panelGroup layout=&quot;block&quot; styleClass=&quot;photo_data&quot;&gt;
                    &lt;h:outputText value=&quot;#{'#{'}rk + 1}&quot; /&gt;
                  &lt;/h:panelGroup&gt;
                &lt;/h:panelGroup&gt;

                &lt;a4j:ajax event=&quot;click&quot; render=&quot;imageHeader, mainImage, â€¦&quot; listener=&quot;#{'#{'}controller.showImage(img)}&quot;
                   onbeforesubmit=&quot;select('#{'#{'}rk}:scrollerImage');&quot; execute=&quot;@this&quot; /&gt;
              &lt;/a4j:outputPanel&gt;
            &lt;/a4j:repeat&gt;
        </pre>
        <p>
            Each element of the <strong><span class="property">&lt;a4j:repeat&gt;</span></strong> has
            a corresponding <strong><span class="property">&lt;a4j:outputPanel&gt;</span></strong>
            with the <strong><span class="property">&lt;a4j:mediaOutput&gt;</span></strong> as a
            nested element. <strong><span class="property">&lt;a4j:mediaOutput&gt;</span></strong>
            renders the thumbnail of the image. As the rows attribute is set to "5" (
            <code class="code">rows="5"</code>
            ), only 5 images are displayed on the page at a time.
        </p>
        <p>As you've noticed, the currently selected image in the images scroller has different style, namely: a red frame
            around thumbnail, which is implemented with the highlighted code.</p>
        <p>
            As you can see from the code snippet, identification of whether the currently selected image is the same image
            displayed by the <strong><span class="property">&lt;a4j:repeat&gt;</span></strong> is
            performed in the styleClass, if it returns "true", different style is applied.
        </p>
        <p>
            Each <strong><span class="property">&lt;a4j:repeat&gt;</span></strong> has a corresponding
            <strong><span class="property">&lt;a4j:ajax&gt;</span></strong> configured like this:
        </p>
        <pre class="brush: xml, gutter: false">
        &lt;a4j:ajax disabled=&quot;#{'#{'}model.selectedImage == img}&quot; 
            event=&quot;click&quot;
            render=&quot;mainImage, treePanel, imagesTable&quot;
            listener=&quot;#{'#{'}controller.showImage(img)}&quot; /&gt;
        </pre>
        <p>
            On every click <strong><span class="property">&lt;a4j:ajax&gt;</span></strong> calls
            <code class="code"> {controller.showImage(img)}</code>
            method that sets the current image, thumbnail of which has just been clicked on. For more details please see
            Controller.java class.
        </p>
        <p>
            To implement thumbnails scrolling effect the <strong><span class="property">&lt;rich:datascroller&gt;</span></strong>
            is attached to the <strong><span class="property">&lt;a4j:repeat&gt;</span></strong>:
        </p>
        <pre class="brush: xml, gutter: false, highlight: [6, 17]">
        &lt;h:panelGrid columns=&quot;3&quot;&gt;
          &lt;h:panelGroup styleClass=&quot;image-scroller-left-arrow&quot;
              style=&quot;width: 56px; height:34px; display: inline-block; 
              filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='resources/img/shell/arr_left.png',sizingMethod='scale');&quot;&gt;
            &lt;h:graphicImage styleClass=&quot;ie6transparency&quot; value=&quot;resources/img/shell/arr_left.png&quot;
                onclick=&quot;#{'#{'}rich:component('scroller')}.fastRewind()&quot; /&gt;
          &lt;/h:panelGroup&gt;
            
          &lt;rich:dataScroller page=&quot;#{'#{'}controller.page}&quot; styleClass=&quot;image-scroller&quot; lastPageMode=&quot;full&quot; for=&quot;repeat&quot;
              render=&quot;imagesTable&quot; boundaryControls=&quot;hide&quot; stepControls=&quot;hide&quot; id=&quot;scroller&quot; fastControls=&quot;hide&quot;&gt;
          &lt;/rich:dataScroller&gt;
            
          &lt;h:panelGroup styleClass=&quot;image-scroller-right-arrow&quot;
              style=&quot;width: 56px; height:34px; display: inline-block; 
              filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='resources/img/shell/arr_right.png',sizingMethod='scale');&quot;&gt;
            &lt;h:graphicImage value=&quot;resources/img/shell/arr_right.png&quot; styleClass=&quot;ie6transparency&quot; height=&quot;34&quot; width=&quot;56&quot; border=&quot;0&quot;
                onclick=&quot;#{'#{'}rich:component('scroller')}.fastForward()&quot; /&gt;
          &lt;/h:panelGroup&gt;
        &lt;/h:panelGrid&gt;
        </pre>
        <p>
            The page attribute identifies which page should be displayed right now. For instance, if you have only 20 images and
            the current image has the 12<sup>th</sup> index in the collection, then the 3<sup>rd</sup> page will be displayed:
        </p>
        <pre class="brush: java, gutter: false">
            public Integer getPage() {
                if (currentPage == 0) {
                    Integer index = model.getSelectedAlbum().getIndex(model.getSelectedImage());
                    currentPage = index / 5 + 1;
                }
                return currentPage;
            }
        </pre>
        <p>
            The
            <code class="code">lastPageMode="full" </code>
            attribute ensures that 5 thumbnails are always shown on the page. If this attribute hadn't been configured like
            this, in case the 19th thumbnail out of 20 had been selected then only 2 last thumbnails would have been displayed.
        </p>
        <p>
            As you can see, <strong><span class="property">&lt;rich:dataScroller&gt;</span></strong>
            has a slightly different look-and-feel, the trick is in hiding the original controls -
            <code class="code">stepControls="hide"</code>
            ,
            <code class="code">fastControls="hide"</code>
            - and using custom elements to control the scrolling through JavaScript:
            <code class="code">onclick="#{rich:component('scroller')}.fastRewind()"</code>
            .
        </p>
        <p>
            To get more details about the <strong><span class="property">&lt;a4j:repeat&gt;</span></strong>
            and <strong><span class="property">&lt;rich:dataScroller&gt;</span></strong> components
            please visit <a target="_blank" xmlns:xlink="http://www.w3.org/1999/xlink"
                href="http://showcase.richfaces.org/richfaces/component-sample.jsf?demo=dataScroller">Showcase</a> web page and
            <a target="_blank" xmlns:xlink="http://www.w3.org/1999/xlink"
                href="http://docs.jboss.org/richfaces/latest_4_3_X/Component_Reference/en-US/html/chap-Component_Reference-Tables_and_grids.html#sect-Component_Reference-Tables_and_grids-richdataScroller">RichFaces
                Developer Guide</a>
        </p>
    </div>

</ui:composition>